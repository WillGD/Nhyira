name: CI/CD Backend - Nhyira

on:
  push:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean package

      - name: Run Unit Tests
        run: mvn test

      - name: Run Integration Tests
        run: mvn verify

      - name: Check Code Coverage
        run: mvn jacoco:report

      - name: List files for debugging
        run: ls -la target

      - name: Verify JAR File
        run: ls -la target/

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/nhyira-api:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nhyira-api:latest

  deploy-to-aws:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.2.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Terraform Init
        run: terraform init
        working-directory:  src/infraNhyira/moduleEc2

      - name: Terraform Validate
        run: terraform validate
        working-directory:  src/infraNhyira/moduleEc2

      - name: Terraform Plan
        run: terraform plan -out=tfplan -var="dockerhub_username=${{ secrets.DOCKERHUB_USERNAME }}"
        working-directory:  src/infraNhyira/moduleEc2

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory:  src/infraNhyira/moduleEc2
